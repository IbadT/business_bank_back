name: Deploy pipeline for Business Bank Backend

on:
    push:
        branches:
            - main
    workflow_dispatch: # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é
    validate-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Validate deployment readiness
              run: |
                echo "Checking deployment readiness..."
                test -f docker-compose.yml || echo "docker-compose.yml missing"
                test -f docker-compose.prod.yml || echo "docker-compose.prod.yml missing"
                test -f Makefile || echo "Makefile missing"
                test -f .env.example || echo ".env.example missing"
                echo "Deployment validation completed"

    # –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
    build-images:
        runs-on: ubuntu-latest
        needs: validate-deploy
        strategy:
            matrix:
                service: [matematika, maska, shared]
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Check if Dockerfile exists
              id: dockerfile-check
              run: |
                if [ -f services/${{ matrix.service }}/Dockerfile ]; then
                  echo "exists=true" >> $GITHUB_OUTPUT
                else
                  echo "exists=false" >> $GITHUB_OUTPUT
                fi
            - name: Build Docker image
              if: steps.dockerfile-check.outputs.exists == 'true'
              uses: docker/build-push-action@v5
              with:
                context: ./services/${{ matrix.service }}
                push: false
                tags: business-bank-${{ matrix.service }}:latest
                cache-from: type=gha
                cache-to: type=gha,mode=max

    # –î–µ–ø–ª–æ–π (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞)
    deploy:
        runs-on: ubuntu-latest
        needs: [validate-deploy, build-images]
        if: always() && (needs.validate-deploy.result == 'success')
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Deploy to staging (placeholder)
              run: |
                echo "üöÄ Deployment placeholder for first commit"
                echo "In future this will:"
                echo "- Deploy to staging environment"
                echo "- Run integration tests"
                echo "- Deploy to production if tests pass"
                echo "Current status: Ready for deployment configuration"